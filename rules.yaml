---
- name: iam_key_max_age_days
  threshold: 30
  purpose: If you do have an access key for your AWS account, delete it. If you must keep it, rotate (change) the access key regularly
  control: Periodically check for key age and make stale keys inactive while removing unused keys or rotating them where they are still used
- name: password_policy_on
  purpose: Configure a Strong Password Policy for Your Users. If you allow users to change their own passwords, require that they create strong passwords and that they rotate their passwords periodically
  control: Apply the Password Policy for your IAM Users and allow users to change their own password
- name: config_recording
  purpose: Determine whether there is at least one Config recorder recording
  control: tba
  regions:
    - ap-southeast-2
- name: cloudtrail_log_delivery
  purpose: Determine whether any of the trails are delivering logs to CloudWatch Logs
  control: tba
  regions:
    - ap-southeast-2
# CIS 4.3	Ensure VPC flow logging is enabled in all VPCs
- name: enabled_vpc_flow_logs
  purpose: Determine whether the root account has active access keys
  control: tba
  regions:
    - ap-southeast-2




- name: avoid_the_use_of_the_root_account
  version: 1.2.0
  recommendation: 1.1
  level: 1
  scored: True
  purpose: The "root" account is the most privileged AWS account. Minimizing the use of this account and adopting the principle of least privilege for access management will reduce the risk of accidental changes and unintended disclosure of highly privileged credentials
  control: Ensure that all users with administrative account access use a dedicated or secondary account for elevated activities. This account should only be used for administrative activities and not internet browsing, email, or similar activities
  settings:
    password_used: 90
    access_key_used: 0
    certificate_rotated: 30

- name: ensure_mfa_is_enabled_for_all_iam_users_that_have_a_console_password
  version: 1.2.0
  recommendation: 1.2
  level: 1
  scored: True
  purpose: Enabling MFA provides increased security for console access as it requires the authenticating principal to possess a device that emits a time-sensitive key and have knowledge of a credential
  control: Use multi-factor authentication and encrypted channels for all administrative account access

- name: ensure_credentials_unused_for_90_days_or_greater_are_disabled
  version: 1.2.0
  recommendation: 1.3
  level: 1
  scored: True
  purpose: Disabling or removing unnecessary credentials will reduce the window of opportunity for credentials associated with a compromised or abandoned account to be used
  control: Automatically disable dormant accounts after a 90 day period of inactivity

- name: ensure_access_keys_are_rotated_every_90_days_or_less
  version: 1.2.0
  recommendation: 1.4
  level: 1
  scored: True
  purpose: Rotating access keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used. Access keys should be rotated to ensure that data cannot be accessed with an old key which might have been lost, cracked, or stolen
  control: Ensure all active keys have been rotated within 90 days. Apply a proceedure (manual or scripted) to generate new replacement access keys and make inactive all keys that have not been rotated in 90 Days

- name: ensure_iam_password_policy_requires_at_least_one_uppercase_letter
  version: 1.2.0
  recommendation: 1.5
  level: 1
  scored: True
  purpose: Setting a password complexity policy increases account resiliency against brute force login attempts
  control: Set the password policy as prescribed (at least one uppercase letter)

- name: ensure_iam_password_policy_require_at_least_one_lowercase_letter
  version: 1.2.0
  recommendation: 1.6
  level: 1
  scored: True
  purpose: Setting a password complexity policy increases account resiliency against brute force login attempts
  control: Set the password policy as prescribed (at least one lowercase letter)

- name: ensure_iam_password_policy_require_at_least_one_symbol
  version: 1.2.0
  recommendation: 1.7
  level: 1
  scored: True
  purpose: Setting a password complexity policy increases account resiliency against brute force login attempts
  control: Perform the following to set the password policy as prescribed (at least one symbol)

- name: ensure_iam_password_policy_require_at_least_one_number
  version: 1.2.0
  recommendation: 1.8
  level: 1
  scored: True
  purpose: Setting a password complexity policy increases account resiliency against brute force login attempts
  control: Perform the following to set the password policy as prescribed (at least one number)

- name: ensure_iam_password_policy_requires_minimum_length_of_14_or_greater
  version: 1.2.0
  recommendation: 1.9
  level: 1
  scored: True
  purpose: Setting a password complexity policy increases account resiliency against brute force login attempts
  control: Perform the following to set the password policy as prescribed ( minimum length of 14 or more)

- name: ensure_iam_password_policy_prevents_password_reuse
  version: 1.2.0
  recommendation: 1.10
  level: 1
  scored: True
  purpose: Preventing password reuse increases account resiliency against brute force login attempts
  control: Perform the following to set the password policy as prescribed (prevent password reuse)

- name: ensure_iam_password_policy_expires_passwords_within_90_days_or_less
  version: 1.2.0
  recommendation: 1.11
  level: 1
  scored: True
  purpose: Reducing the password lifetime increases account resiliency against brute force login attempts
  control: Perform the following to set the password policy as prescribed (expire passwords within 90 days or less)

- name: ensure_no_root_account_access_key_exists
  version: 1.2.0
  recommendation: 1.12
  level: 1
  scored: True
  purpose: Removing access keys associated with the root account limits vectors by which the account can be compromised. Additionally, removing the root access keys encourages the creation and use of role based accounts that are least privileged
  control: Delete or disable active root access keys. Ensure that all users with administrative account access use a dedicated or secondary account for elevated activities

- name: ensure_mfa_is_enabled_for_the_root_account
  version: 1.2.0
  recommendation: 1.13
  level: 1
  scored: True
  purpose: Enabling MFA provides increased security for console access as it requires the authenticating principal to possess a device that emits a time-sensitive key and have knowledge of a credential
  control: Use multi-factor authentication (MFA) for all administrative "root" account access.

- name: ensure_hardware_mfa_is_enabled_for_the_root_account
  version: 1.2.0
  recommendation: 1.14
  level: 2
  scored: True
  purpose: A hardware MFA has a smaller attack surface than a virtual MFA. For example, a hardware MFA does not suffer the attack surface introduced by the mobile smartphone on which a virtual MFA resides
  control: Establish a hardware MFA for the root account. Remediation should be only through the AWS Console , you must use your root account devices for the root account using credentials to sign in to AWS. You cannot manage MFA devices for the root account using other credentials

- name: ensure_security_questions_are_registered_in_the_aws_account
  version: 1.2.0
  recommendation: 1.15
  level: 1
  scored: False
  purpose: During events in which the Root password is no longer accessible or the MFA token associated with root is lost/destroyed it is possible, through authentication using secret questions and associated answers, to recover root login access
  control: Login to the AWS Account as root, in the "Configure Security Questions" section select an appropriate question and enter an appropriate answer for 3 questions. Record Questions and Answers and place in a secure physical location

- name: ensure_iam_policies_are_attached_only_to_groups_or_roles
  version: 1.2.0
  recommendation: 1.16
  level: 1
  scored: True
  purpose: Assigning privileges at the group or role level reduces the complexity of access management as the number of users grow. Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges
  control: Create an IAM group and assign a policy to it, add a user to a given group, and remove a direct association between a user and any inline policies

- name: maintain_current_contact_details
  version: 1.2.0
  recommendation: 1.17
  level: 1
  scored: False
  purpose: If an AWS account is observed to be behaving in a prohibited or suspicious manner, AWS will attempt to contact the account owner by email and phone using the contact details listed. If this is unsuccessful and the account behavior needs urgent mitigation, proactive measures may be taken, including throttling of traffic between the account exhibiting suspicious behavior and the AWS API endpoints and the Internet. This will result in impaired service to and from the account in question, so it is in both the customers and AWS best interests that prompt contact can be established. This is best achieved by setting AWS account contact details to point to resources which have multiple individuals as recipients, such as email aliases and PABX hunt groups
  control: Login to the AWS Account  with a user who has permission to read and write Billing information. Edit your contact information in the Account Settings

- name: ensure_security_contact_information_is_registered
  version: 1.2.0
  recommendation: 1.18
  level: 1
  scored: False
  purpose: Specifying security-specific contact information will help ensure that security advisories sent by AWS reach the team in your organization that is best equipped to respond to them
  control: Establish security contact in the Alternate Contacts section of My Account. Consider specifying an internal email distribution list to ensure emails are regularly monitored by more than one individual

- name: ensure_iam_instance_roles_are_used_for_aws_resource_access_from_instances
  version: 1.2.0
  recommendation: 1.19
  level: 2
  scored: False
  purpose: AWS IAM roles reduce the risks associated with sharing and rotating credentials that can be used outside of AWS itself. If credentials are compromised, they can be used from outside of the AWS account they give access to. In contrast, in order to leverage role permissions an attacker would need to gain and maintain access to a specific instance to use the privileges associated with it. As time goes on, credentials that cannot be rotated are more likely to be known by an increasing number of individuals who no longer work for the organization owning the credentials
  control: For any EC2 instance without a role associated it is now possible to associate roles while the instance state is of either 'running' or 'stopped' state, you do not need to stop or launch a new instance to assign a role.
  regions:
    - ap-southeast-2

- name: ensure_a_support_role_has_been_created_to_manage_incidents_with_aws_support
  version: 1.2.0
  recommendation: 1.20
  level: 1
  scored: True
  purpose: By implementing least privilege for access control, an IAM Role will require an appropriate IAM Policy to allow Support Center Access in order to manage Incidents with AWS Support
  control: Create an IAM role for managing incidents with AWS, and configure it to allow only authorized users to manage incidents with AWS Support

- name: do_not_setup_access_keys_during_initial_user_setup_for_all_iam_users_that_have_a_console_password
  version: 1.2.0
  recommendation: 1.21
  level: 1
  scored: False
  purpose: Requiring that additional steps be taken by the user after their profile has been created will give a stronger indication of intent that access keys are [a] necessary for their work and [b] once the access key is established on an account that the keys may be in use somewhere in the organization
  control: Delete access keys that that were created at the same time as the user profile and do not have a last used date

- name: ensure_iam_policies_that_allow_full_administrative_privileges_are_not_created
  version: 1.2.0
  recommendation: 1.22
  level: 1
  scored: True
  purpose: It's more secure to start with a minimum set of permissions and grant additional permissions as necessary, rather than starting with permissions that are too lenient and then trying to tighten them later. Providing full administrative privileges instead of restricting to the minimum set of permissions that the user is required to do exposes the resources to potentially unwanted actions
  control: Detach the policy that has full administrative privileges, grant least privilege in its place, granting only the permissions required to perform a task
